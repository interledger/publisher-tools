name: wm-tools
services:
  backend:
    hostname: backend
    build:
      context: ../..
      dockerfile: backend/Dockerfile.dev
    command: 'pnpm nodemon --watch . --ext ts,js,mjs,cjs,json --exec pnpm tsx src/server.ts'
    ports:
      - '5101:5101'
    expose:
      - '5101'
    volumes:
      - ../../certs:/app/certs # Ensure certificates are available
      - ../../backend:/app/backend
      - /app/backend/node_modules
    networks:
      - wm-tools
    environment:
      PORT: 5101
      NODE_ENV: development
      SSL_CERT: /app/certs/cert.pem
      SSL_KEY: /app/certs/key.pem
      CHOKIDAR_USEPOLLING: 'true'
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_RETRY_MAX_ATTEMPTS: ${AWS_RETRY_MAX_ATTEMPTS}
      AWS_RETRY_TIMEOUT: ${AWS_RETRY_TIMEOUT}

  frontend:
    hostname: frontend
    build:
      context: ../..
      dockerfile: frontend/Dockerfile.dev
      args:
        VITE_SCRIPT_API_URL: ${SCRIPT_API_URL}
        VITE_SCRIPT_FRONTEND_URL: ${SCRIPT_FRONTEND_URL}
        VITE_SCRIPT_ILPAY_URL: ${SCRIPT_ILPAY_URL}
        VITE_INIT_SCRIPT_URL: ${SCRIPT_EMBED_URL}
    ports:
      - '5100:5100'
    expose:
      - '5100'
    environment:
      PORT: 5100
      NODE_ENV: development
      API_URL: ${API_URL}
      ILPAY_URL: ${SCRIPT_ILPAY_URL}
      FRONTEND_URL: ${SCRIPT_FRONTEND_URL}
      INIT_SCRIPT_URL: ${SCRIPT_EMBED_URL}
    networks:
      - wm-tools
    command: pnpm run dev
    depends_on:
      - backend
    volumes:
      - ../../certs:/app/certs
      - ../../frontend:/app/frontend
      - /app/frontend/node_modules

networks:
  wm-tools:
    driver: bridge
