name: wm-tools
services:
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    command: pnpm nodemon --watch . --ext ts,js,mjs,cjs,json --exec "pnpm tsx src/server.ts"
    ports:
      - "5101:5101"
    expose:
      - "5101"
    volumes:
      - ../../backend:/app
      - ../../certs:/certs # Ensure certificates are available
      - /app/node_modules
    networks:
      - wm-tools
    environment:
      PORT: 5101
      NODE_ENV: development
      SSL_CERT: /certs/cert.pem
      SSL_KEY: /certs/key.pem
      CHOKIDAR_USEPOLLING: "true"
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_RETRY_MAX_ATTEMPTS: ${AWS_RETRY_MAX_ATTEMPTS}
      AWS_RETRY_TIMEOUT: ${AWS_RETRY_TIMEOUT}

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5100:5100"
    expose:
      - "5100"
    environment:
      PORT: 5100
      NODE_ENV: development
      SSL_CERT: /certs/cert.pem
      SSL_KEY: /certs/key.pem
      CHOKIDAR_USEPOLLING: "true"
      VITE_INTERNAL_API_URL: ${INTERNAL_API_URL}
      VITE_API_URL: ${API_URL} # VITE_ prefix to accomodate VITE in FE
      VITE_FRONTEND_URL: ${FRONTEND_URL}
      VITE_ILPAY_URL: ${ILPAY_URL}
    networks:
      - wm-tools
    command: pnpm run dev
    depends_on: 
      - backend
    volumes:
      - ../../frontend:/app
      - ../../certs:/certs
      - /app/node_modules
networks:
  wm-tools:
    driver: bridge
