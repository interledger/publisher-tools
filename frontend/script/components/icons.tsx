import { cx } from "class-variance-authority";
import { type SVGProps } from "react";

const DIRECTION = {
  up: "rotate-180",
  down: "rotate-0",
  left: "rotate-90",
  right: "-rotate-90",
} as const;

type Direction = keyof typeof DIRECTION;

type ChevronProps = SVGProps<SVGSVGElement> & {
  direction?: Direction;
};

export const Chevron = ({
  direction = "down",
  className,
  ...props
}: ChevronProps) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className={cx(className, DIRECTION[direction])}
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M19.5 8.25l-7.5 7.5-7.5-7.5"
      />
    </svg>
  );
};

export const Clipboard = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25zM6.75 12h.008v.008H6.75V12zm0 3h.008v.008H6.75V15zm0 3h.008v.008H6.75V18z"
      />
    </svg>
  );
};

export const ClipboardCheck = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.9-4.414c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0118 18.75h-2.25m-7.5-10.5H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V18.75m-7.5-10.5h6.375c.621 0 1.125.504 1.125 1.125v9.375m-8.25-3l1.5 1.5 3-3.75"
      />
    </svg>
  );
};

type FinishCheckProps = SVGProps<SVGSVGElement> & {
  color?: string;
};
export const FinishCheck = ({ color, ...props }: FinishCheckProps) => {
  return (
    <svg
      width="136"
      height="135"
      viewBox="0 0 136 135"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M68 0C30.4637 0 0 30.2397 0 67.5C0 104.76 30.4637 135 68 135C105.536 135 136 104.76 136 67.5C136 30.2397 105.587 0 68 0ZM111.115 54.3283L55.7665 101.225L25.8189 69.293C23.1331 66.4213 23.2894 61.9622 26.1787 59.2997C29.0717 56.6336 33.5639 56.7887 36.2461 59.6569L56.9005 81.6458L101.873 43.5629C104.868 41.0015 109.36 41.3586 111.94 44.3314C114.47 47.3041 114.11 51.8137 111.115 54.3247V54.3283Z"
        fill={color === "red" ? "#FF7A7F" : "#007777"}
        fillOpacity="0.2"
      />
    </svg>
  );
};

export const FinishError = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      width="136"
      height="135"
      viewBox="0 0 136 135"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M68 0C30.4218 0 0 30.1981 0 67.5C0 104.802 30.4218 135 68 135C105.578 135 136 104.802 136 67.5C136 30.1981 105.581 0 68 0ZM104.241 105.315C102.85 106.747 100.998 107.409 99.1454 107.409C97.2933 107.409 95.5431 106.744 94.152 105.366L68.26 80.0714L42.7781 105.773C41.387 107.204 39.5349 107.867 37.6828 107.867C35.8307 107.867 34.0804 107.202 32.6893 105.824C29.8589 103.065 29.8589 98.5681 32.5875 95.809L58.0694 70.1074L32.1774 44.8129C29.3469 42.0538 29.3469 37.5574 32.0755 34.7983C34.8041 32.0392 39.3848 31.9887 42.1643 34.6972L68.0563 59.9917L93.5382 34.2901C96.3177 31.4805 100.847 31.4805 103.627 34.189C106.457 36.9481 106.457 41.4445 103.729 44.2036L78.2469 69.9052L104.139 95.1997C106.969 98.0626 107.023 102.559 104.241 105.318V105.315Z"
        fill="#FF7A7F"
        fillOpacity="0.3"
      />
    </svg>
  );
};

export const BackNav = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      width="18"
      height="12"
      viewBox="0 0 18 12"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M6 12L0 6L6 0L7.4 1.4L3.8 5H18V7H3.8L7.4 10.6L6 12Z"
        fill="#87D5C3"
      />
    </svg>
  );
};

export const Share = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      width="18"
      height="20"
      viewBox="0 0 18 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M15 20C14.1667 20 13.4583 19.7083 12.875 19.125C12.2917 18.5417 12 17.8333 12 17C12 16.8833 12.0083 16.7623 12.025 16.637C12.0417 16.5123 12.0667 16.4 12.1 16.3L5.05 12.2C4.76667 12.45 4.45 12.6457 4.1 12.787C3.75 12.929 3.38333 13 3 13C2.16667 13 1.45833 12.7083 0.875 12.125C0.291667 11.5417 0 10.8333 0 10C0 9.16667 0.291667 8.45833 0.875 7.875C1.45833 7.29167 2.16667 7 3 7C3.38333 7 3.75 7.07067 4.1 7.212C4.45 7.354 4.76667 7.55 5.05 7.8L12.1 3.7C12.0667 3.6 12.0417 3.48767 12.025 3.363C12.0083 3.23767 12 3.11667 12 3C12 2.16667 12.2917 1.45833 12.875 0.875C13.4583 0.291667 14.1667 0 15 0C15.8333 0 16.5417 0.291667 17.125 0.875C17.7083 1.45833 18 2.16667 18 3C18 3.83333 17.7083 4.54167 17.125 5.125C16.5417 5.70833 15.8333 6 15 6C14.6167 6 14.25 5.929 13.9 5.787C13.55 5.64567 13.2333 5.45 12.95 5.2L5.9 9.3C5.93333 9.4 5.95833 9.51233 5.975 9.637C5.99167 9.76233 6 9.88333 6 10C6 10.1167 5.99167 10.2373 5.975 10.362C5.95833 10.4873 5.93333 10.6 5.9 10.7L12.95 14.8C13.2333 14.55 13.55 14.354 13.9 14.212C14.25 14.0707 14.6167 14 15 14C15.8333 14 16.5417 14.2917 17.125 14.875C17.7083 15.4583 18 16.1667 18 17C18 17.8333 17.7083 18.5417 17.125 19.125C16.5417 19.7083 15.8333 20 15 20ZM15 4C15.2833 4 15.5207 3.90433 15.712 3.713C15.904 3.521 16 3.28333 16 3C16 2.71667 15.904 2.479 15.712 2.287C15.5207 2.09567 15.2833 2 15 2C14.7167 2 14.4793 2.09567 14.288 2.287C14.096 2.479 14 2.71667 14 3C14 3.28333 14.096 3.521 14.288 3.713C14.4793 3.90433 14.7167 4 15 4ZM3 11C3.28333 11 3.521 10.904 3.713 10.712C3.90433 10.5207 4 10.2833 4 10C4 9.71667 3.90433 9.479 3.713 9.287C3.521 9.09567 3.28333 9 3 9C2.71667 9 2.479 9.09567 2.287 9.287C2.09567 9.479 2 9.71667 2 10C2 10.2833 2.09567 10.5207 2.287 10.712C2.479 10.904 2.71667 11 3 11ZM15 18C15.2833 18 15.5207 17.904 15.712 17.712C15.904 17.5207 16 17.2833 16 17C16 16.7167 15.904 16.4793 15.712 16.288C15.5207 16.096 15.2833 16 15 16C14.7167 16 14.4793 16.096 14.288 16.288C14.096 16.4793 14 16.7167 14 17C14 17.2833 14.096 17.5207 14.288 17.712C14.4793 17.904 14.7167 18 15 18Z"
        fill="#475569"
      />
    </svg>
  );
};
